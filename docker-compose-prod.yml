version: '3'

services:
  web:
    restart: always
    build: ./
    expose:
      - "8000"
    links:
      - db:db
    volumes:
      - web-data:/usr/src/app/static
    env_file: 
      - .env
    command: /usr/local/bin/gunicorn -w 2 -b :8000 wsgi:app

  nginx:
    restart: always
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/www/static
      - web-data:/usr/src/app/static
      - ./app/static:/static
      # for certbot
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    links:
      - web:web
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-data:/usr/src/app/static
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/usr/src/app/static --email espoir.mur@gmail.com --agree-tos --no-eff-email --force-renewal --staging -d murhabazi.com
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'kivuExchange'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'root'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'gloire'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'gloire'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - db-data:/var/lib/mysql

volumes:
  db-data:
  web-data:
  certbot-etc:
  certbot-var:
